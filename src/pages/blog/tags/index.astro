---
import Page from "@/layouts/Page.astro";
import Main from "@/components/Main.astro";
import { getCollection } from "astro:content";
import { SITE_TITLE } from "@/lib/consts";

function groupBy<K extends PropertyKey, T>(
  items: Iterable<T>,
  keySelector: (item: T, index: number) => K,
): Partial<Record<K, T[]>> {
  return [...items].reduce(
    (result, item, index) => {
      const key = keySelector(item, index);
      if (result[key]) {
        result[key]!.push(item);
      } else {
        result[key] = [item];
      }
      return result;
    },
    {} as Partial<Record<K, T[]>>,
  );
}

const posts = await getCollection("blog");
const postPerTag = posts.flatMap(
  (post) => post.data.tags?.map((tag) => ({ post, tag })) ?? [],
);
const groupedPosts = groupBy(postPerTag, (_) => _.tag);
// sort alphabetically
const sorted = Object.entries(groupedPosts).sort((a, b) => {
  const [tagA] = a;
  const [tagB] = b;
  return tagA.localeCompare(tagB);
});
---

<Page
  title={`Blog - Tags | ${SITE_TITLE}`}
  description="All tags I've used in my blog"
>
  <Main title="Blog - Tags">
    <div class="flex flex-col gap-y-3">
      {
        sorted.map(([tag, posts]) => (
          <a href={`/blog/tags/${tag}`}>
            <h2 class="text-xl underline md:no-underline md:hover:underline">{`${tag} (${posts?.length})`}</h2>
          </a>
        ))
      }
    </div>
  </Main>
</Page>
